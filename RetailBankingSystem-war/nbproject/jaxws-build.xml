<?xml version="1.0" encoding="UTF-8"?><!--
        *** GENERATED FROM jax-ws.xml - DO NOT EDIT !                             ***
        *** TO MODIFY wsimport options USE Web Service node -> Edit WS Attributes ***
        *** TO CHANGE TARGETS GENERATED TO jaxws-build.xml COPY THOSE             ***
        *** TARGETS TO ../build.xml AND MODIFY THAT FILE INSTEAD                  ***

        --><project xmlns:xalan="http://xml.apache.org/xslt" xmlns:webproject2="http://www.netbeans.org/ns/web-project/2" xmlns:jaxws="http://www.netbeans.org/ns/jax-ws/1">
    <!--
                ===================
                JAX-WS WSGEN SECTION
                ===================
            -->
    <!--
                ===================
                JAX-WS WSIMPORT SECTION
                ===================
            -->
    <target name="wsimport-init" depends="init">
        <fail if="${wsimport.bad.version}" message="WsImport ant task defined in the classpath ${j2ee.platform.wsimport.classpath} has a serious bug. See http://wiki.netbeans.org/MetroIssue for details."/>
        <mkdir dir="${build.generated.sources.dir}/jax-ws"/>
        <property name="j2ee.platform.wsimport.classpath" value="${libs.jaxws21.classpath}"/>
        <taskdef name="wsimport" classname="com.sun.tools.ws.ant.WsImport">
            <classpath path="${java.home}/../lib/tools.jar:${j2ee.platform.wsimport.classpath}:${javac.classpath}"/>
        </taskdef>
        <condition property="conf-dir" value="${conf.dir}/" else="">
            <isset property="conf.dir"/>
        </condition>
    </target>
    <target name="wsimport-client-SWIFTWebService" depends="wsimport-init">
        <mkdir dir="${build.generated.dir}/jax-wsCache/SWIFTWebService"/>
        <wsimport sourcedestdir="${build.generated.dir}/jax-wsCache/SWIFTWebService" destdir="${build.generated.dir}/jax-wsCache/SWIFTWebService" wsdl="${basedir}/${conf-dir}xml-resources/web-service-references/SWIFTWebService/wsdl/localhost_8080/SWIFTWebService/SWIFTWebService.wsdl" catalog="catalog.xml" encoding="${source.encoding}" extension="true" verbose="true" fork="false" wsdlLocation="http://localhost:8080/SWIFTWebService/SWIFTWebService?wsdl" xnocompile="true" xendorsed="true" package="ws.client.swift">
            <depends file="${basedir}/${conf-dir}xml-resources/web-service-references/SWIFTWebService/wsdl/localhost_8080/SWIFTWebService/SWIFTWebService.wsdl"/>
            <produces dir="${build.generated.dir}/jax-wsCache/SWIFTWebService"/>
        </wsimport>
        <copy todir="${build.generated.sources.dir}/jax-ws">
            <fileset dir="${build.generated.dir}/jax-wsCache/SWIFTWebService">
                <include name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="wsimport-client-clean-SWIFTWebService" depends="-init-project">
        <delete dir="${build.generated.sources.dir}/jax-ws/ws/client/swift"/>
        <delete dir="${build.generated.dir}/jax-wsCache/SWIFTWebService"/>
    </target>
    <target name="wsimport-client-CHIPSWebService" depends="wsimport-init">
        <mkdir dir="${build.generated.dir}/jax-wsCache/CHIPSWebService"/>
        <wsimport sourcedestdir="${build.generated.dir}/jax-wsCache/CHIPSWebService" destdir="${build.generated.dir}/jax-wsCache/CHIPSWebService" wsdl="${basedir}/${conf-dir}xml-resources/web-service-references/CHIPSWebService/wsdl/localhost_8080/CHIPSWebService/CHIPSWebService.wsdl" catalog="catalog.xml" encoding="${source.encoding}" extension="true" verbose="true" fork="false" wsdlLocation="http://localhost:8080/CHIPSWebService/CHIPSWebService?wsdl" xnocompile="true" xendorsed="true" package="ws.client.chips">
            <depends file="${basedir}/${conf-dir}xml-resources/web-service-references/CHIPSWebService/wsdl/localhost_8080/CHIPSWebService/CHIPSWebService.wsdl"/>
            <produces dir="${build.generated.dir}/jax-wsCache/CHIPSWebService"/>
        </wsimport>
        <copy todir="${build.generated.sources.dir}/jax-ws">
            <fileset dir="${build.generated.dir}/jax-wsCache/CHIPSWebService">
                <include name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="wsimport-client-clean-CHIPSWebService" depends="-init-project">
        <delete dir="${build.generated.sources.dir}/jax-ws/ws/client/chips"/>
        <delete dir="${build.generated.dir}/jax-wsCache/CHIPSWebService"/>
    </target>
    <target name="wsimport-client-OtherBanksWebService" depends="wsimport-init">
        <mkdir dir="${build.generated.dir}/jax-wsCache/OtherBanksWebService"/>
        <wsimport sourcedestdir="${build.generated.dir}/jax-wsCache/OtherBanksWebService" destdir="${build.generated.dir}/jax-wsCache/OtherBanksWebService" wsdl="${basedir}/${conf-dir}xml-resources/web-service-references/OtherBanksWebService/wsdl/localhost_8080/OtherBanksWebService/OtherBanksWebService.wsdl" catalog="catalog.xml" encoding="${source.encoding}" extension="true" verbose="true" fork="false" wsdlLocation="http://localhost:8080/OtherBanksWebService/OtherBanksWebService?wsdl" xnocompile="true" xendorsed="true" package="ws.client.otherbanks">
            <depends file="${basedir}/${conf-dir}xml-resources/web-service-references/OtherBanksWebService/wsdl/localhost_8080/OtherBanksWebService/OtherBanksWebService.wsdl"/>
            <produces dir="${build.generated.dir}/jax-wsCache/OtherBanksWebService"/>
        </wsimport>
        <copy todir="${build.generated.sources.dir}/jax-ws">
            <fileset dir="${build.generated.dir}/jax-wsCache/OtherBanksWebService">
                <include name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="wsimport-client-clean-OtherBanksWebService" depends="-init-project">
        <delete dir="${build.generated.sources.dir}/jax-ws/ws/client/otherbanks"/>
        <delete dir="${build.generated.dir}/jax-wsCache/OtherBanksWebService"/>
    </target>
    <target name="wsimport-client-SACHWebService" depends="wsimport-init">
        <mkdir dir="${build.generated.dir}/jax-wsCache/SACHWebService"/>
        <wsimport sourcedestdir="${build.generated.dir}/jax-wsCache/SACHWebService" destdir="${build.generated.dir}/jax-wsCache/SACHWebService" wsdl="${basedir}/${conf-dir}xml-resources/web-service-references/SACHWebService/wsdl/localhost_8080/SACHWebService/SACHWebService.wsdl" catalog="catalog.xml" encoding="${source.encoding}" extension="true" verbose="true" fork="false" wsdlLocation="http://localhost:8080/SACHWebService/SACHWebService?wsdl" xnocompile="true" xendorsed="true" package="ws.client.sach">
            <depends file="${basedir}/${conf-dir}xml-resources/web-service-references/SACHWebService/wsdl/localhost_8080/SACHWebService/SACHWebService.wsdl"/>
            <produces dir="${build.generated.dir}/jax-wsCache/SACHWebService"/>
        </wsimport>
        <copy todir="${build.generated.sources.dir}/jax-ws">
            <fileset dir="${build.generated.dir}/jax-wsCache/SACHWebService">
                <include name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="wsimport-client-clean-SACHWebService" depends="-init-project">
        <delete dir="${build.generated.sources.dir}/jax-ws/ws/client/sach"/>
        <delete dir="${build.generated.dir}/jax-wsCache/SACHWebService"/>
    </target>
    <target name="wsimport-client-TransactionAuthorizationWebService" depends="wsimport-init">
        <mkdir dir="${build.generated.dir}/jax-wsCache/TransactionAuthorizationWebService"/>
        <wsimport sourcedestdir="${build.generated.dir}/jax-wsCache/TransactionAuthorizationWebService" destdir="${build.generated.dir}/jax-wsCache/TransactionAuthorizationWebService" wsdl="${basedir}/${conf-dir}xml-resources/web-service-references/TransactionAuthorizationWebService/wsdl/localhost_8080/TransactionAuthorizationWebService/TransactionAuthorizationWebService.wsdl" catalog="catalog.xml" encoding="${source.encoding}" extension="true" verbose="true" fork="false" wsdlLocation="http://localhost:8080/TransactionAuthorizationWebService/TransactionAuthorizationWebService?wsdl" xnocompile="true" xendorsed="true" package="ws.client.merlionTransactionAuthorization">
            <depends file="${basedir}/${conf-dir}xml-resources/web-service-references/TransactionAuthorizationWebService/wsdl/localhost_8080/TransactionAuthorizationWebService/TransactionAuthorizationWebService.wsdl"/>
            <produces dir="${build.generated.dir}/jax-wsCache/TransactionAuthorizationWebService"/>
        </wsimport>
        <copy todir="${build.generated.sources.dir}/jax-ws">
            <fileset dir="${build.generated.dir}/jax-wsCache/TransactionAuthorizationWebService">
                <include name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="wsimport-client-clean-TransactionAuthorizationWebService" depends="-init-project">
        <delete dir="${build.generated.sources.dir}/jax-ws/ws/client/merlionTransactionAuthorization"/>
        <delete dir="${build.generated.dir}/jax-wsCache/TransactionAuthorizationWebService"/>
    </target>
    <target name="wsimport-client-generate" depends="wsimport-client-SWIFTWebService, wsimport-client-CHIPSWebService, wsimport-client-OtherBanksWebService, wsimport-client-SACHWebService, wsimport-client-TransactionAuthorizationWebService"/>
</project>
